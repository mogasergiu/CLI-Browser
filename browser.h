/*  */
#include "stack.h"
#include "queue.h"
#include "utils.h"
#include "linked_list.h"

#ifndef BROWSER_TAB
#define BROWSER_TAB

#define MAX_URL_SIZE 30

#define TOP_TAB(br) (((Browser*)br)->topTab)
#define EMPTY_BR(br) (TOP_TAB(br) == NULL)
#define SIZE_BR(br) (((Browser*)br)->size)

typedef struct {
    char *url;
    int num_res;
    Resource *resources;
} WebPage;

typedef struct {
    WebPage *current_page;
    void *back_stack, *forward_stack;
} Tab;

typedef struct {
    void *downloads;
    void *history;
    void *tabs;
} Browser;

// custom function to properly copy the members of the WebPage struct
void* WebPageDeepCopy(void *wp1, const void *wp2, size_t size);

void printURL(void *t, FILE *f);

// returns a pointer to the web page generated by the "url"
void* getWebPage(char *url);

void newTab(void **tabs, void **myTab);

// function that initializes every memeber of a Tab struct
void* createTab();

// pops a tab off the back of the Tab double linked list
void PopTab(void **tabs);

// sets the current tab's current web page to the web page generated by "url"
void gotoWebPage(void *t, char *url);

void freeWebPage(void *wp);

void freeTab(void *t);

void printDownloads(void **d, FILE *f);

/*
 * function used by the "downloads" priority queue, to decide between two
 * two elements, which takes priority over another
 */
int downloadPriority(void *res1, void *res2);

// called when the "wait" command is issued
void updateDownloads(void **d, unsigned long downloaded);

void printResources(void *t, FILE *f);

Resource downloadResource(void *t, int whichResource);

int goBack(void *t);

int goForward(void *t);

void printHistory(void **h, FILE *f);

void deleteHistory(void *h, int n);

Browser* BrowserInit();

void freeBrowser(Browser **b);

#endif
